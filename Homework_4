CREATE DATABASE IF NOT EXISTS homework_4;

USE homework_4;

DROP TABLE IF EXISTS shops;

CREATE TABLE shops (
	id INT,
    shopname VARCHAR (100),
    PRIMARY KEY (id)
);

DROP TABLE IF EXISTS cats;

CREATE TABLE cats (
	`name` VARCHAR (100),
    id INT,
    PRIMARY KEY (id),
    shops_id INT,
    CONSTRAINT fk_cats_shops_id FOREIGN KEY (shops_id)
       REFERENCES shops (id)
);

INSERT INTO shops
VALUES 
		(1, "Четыре лапы"),
        (2, "Мистер Зоо"),
        (3, "МурзиЛЛа"),
        (4, "Кошки и собаки");

INSERT INTO cats
VALUES 
		("Murzik",1,1),
        ("Nemo",2,2),
        ("Vicont",3,1),
        ("Zuza",4,3);
        
 -- №1  Используя JOIN-ы, выполните следующие операции:
-- Вывести всех котиков по магазинам по id (условие соединения shops.id = cats.shops_id)
 
SELECT cats.`name`, shops.shopname
FROM cats
JOIN shops ON  shops.id = cats.shops_id;

-- #2 Вывести магазин, в котором продается кот “Мурзик” (попробуйте выполнить 2 способами)

SELECT shops.shopname
FROM cats
JOIN shops ON  shops.id = cats.shops_id
WHERE cats.name = "Murzik";

SELECT shopname
FROM shops
WHERE id = (SELECT shops_id FROM cats WHERE `name`= "Murzik");

-- #3 Вывести магазины, в которых НЕ продаются коты “Мурзик” и “Zuza”

SELECT shopname
FROM shops 
LEFT JOIN cats ON  (shops.id = cats.shops_id AND (cats.`name` = "Murzik" OR cats.`name` = "Zuza"))
WHERE cats.`name` IS NULL;

SELECT shopname
FROM shops 
LEFT JOIN cats ON cats.shops_id = shops.id AND cats.`name` IN ("Murzik", "Zuza")
WHERE cats.id IS NULL;


SELECT shops.shopname
FROM shops  
WHERE id NOT IN (SELECT shops_id FROM cats c WHERE c.name IN ("Murzik", "Zuza"));
